
#ifndef def_token
#  define def_token(K)
#endif

#ifndef def_puncop
#  define def_puncop(K, S) def_token(K)
#endif

#ifndef def_keyword
#  define def_keyword(K, S) def_token(K)
#endif

def_token(EndOfFile)
def_token(Invalid)
def_token(Unknown)

def_puncop(LeftParen, "(")
def_puncop(RightParen, ")")
def_puncop(LeftBracket, "[")
def_puncop(RightBracket, "]")
def_puncop(LeftBrace, "{")
def_puncop(RightBrace, "}")
def_puncop(Question, "?")
def_puncop(Hash, "#")
def_puncop(Plus, "+")
def_puncop(Minus, "-")
def_puncop(Star, "*")
def_puncop(Slash, "/")
def_puncop(Percent, "%")
def_puncop(Ampersand, "&")
// def_puncop(Bar, "|")
def_puncop(Caret, "^")
def_puncop(Tilde, "~")
def_puncop(Bang, "!")
def_puncop(Less, "<")
def_puncop(Greater, ">")
def_puncop(Equal, "=")
def_puncop(Dot, ".")
def_puncop(Colon, ":")
def_puncop(Semicolon, ";")
def_puncop(Comma, ",")

// def_puncop(LessLess, "<<")
// def_puncop(GreaterGreater, ">>")
def_puncop(EqualEqual, "==")
def_puncop(BangEqual, "!=")
def_puncop(LessEqual, "<=")
def_puncop(GreaterEqual, ">=")
def_puncop(AmpersandAmpersand, "&&")
def_puncop(BarBar, "||")
def_puncop(PlusEqual, "+=")
def_puncop(MinusEqual, "-=")
def_puncop(StarEqual, "*=")
def_puncop(SlashEqual, "/=")
def_puncop(PercentEqual, "%=")
// def_puncop(AmpersandEqual, "&=")
// def_puncop(BarEqual, "|=")
// def_puncop(CaretEqual, "^=")
// def_puncop(GreaterGreaterEqual, ">>=")
// def_puncop(LessLessEqual, "<<=")
def_puncop(MinusGreater, "->")
def_puncop(EqualGreater, "=>")
def_puncop(PlusPlus, "++")
def_puncop(MinusMinus, "--")

def_puncop(Ellipsis, "...")

// Bitwise keywords
def_keyword(BitAnd, "bit_and")
def_keyword(BitOr, "bit_or")
def_keyword(BitXOr, "bit_xor")
def_keyword(BitShl, "bit_shl")
def_keyword(BitShr, "bit_shr")
def_keyword(BitNot, "bit_not")

def_keyword(As, "as")
def_keyword(And, "and")
def_keyword(Bool, "bool")
def_keyword(Break, "break")
def_keyword(Byte, "byte")
def_keyword(Case, "case")
def_keyword(Character, "character")
def_keyword(Class, "class")
def_keyword(Const, "const")
def_keyword(Continue, "continue")
def_keyword(Do, "do")
def_keyword(Else, "else")
def_keyword(False, "false")
def_keyword(Float, "float")
def_keyword(For, "for")
def_keyword(Forward, "forward")
def_keyword(Func, "func")
def_keyword(Super, "super")
def_keyword(Mixin, "mixin")
def_keyword(If, "if")
def_keyword(In, "in")
def_keyword(Inout, "inout")
def_keyword(Integer, "integer")
def_keyword(Int, "int")
def_keyword(Is, "is")
def_keyword(Lambda, "lambda")
def_keyword(Let, "let")
def_keyword(Move, "move")
def_keyword(Namespace, "namespace")
def_keyword(Not, "not")
def_keyword(Null, "null")
def_keyword(Operator, "operator")
def_keyword(Or, "or")
def_keyword(Out, "out")
def_keyword(Real, "real")
// def_keyword(Ref, "ref")
// def_keyword(Rref, "rref")
def_keyword(Return, "return")
def_keyword(Switch, "switch")
def_keyword(Throw, "throw")
def_keyword(True, "true")
def_keyword(Type, "type")
def_keyword(Using, "using")
def_keyword(Var, "var")
def_keyword(Void, "void")
def_keyword(Where, "where")
def_keyword(While, "while")
def_keyword(StaticCast, "static_cast")
def_keyword(DynamicCast, "dynamic_cast")
def_keyword(ReinterpretCast, "reinterpret_cast")
// This is the last keyword, define any others above this:
def_keyword(ConstCast, "const_cast")

def_token(Identifier)
def_token(BinaryInteger)
def_token(DecimalInteger)
def_token(HexadecimalInteger)
def_token(DecimalFloat)
def_token(HexadecimalFloat)
def_token(Character)
def_token(String)
def_token(Deref)

#undef def_keyword
#undef def_puncop
#undef def_token
